//To verify that the proof generated by a Cairo program execution that used a Felt252Dict<T> is correct, 
//we need to check that there wasn't any illegal tampering with the dictionary. This is done through a 
//method called squash_dict that reviews each entry of the entry list and checks that access to the 
//dictionary remains coherent throughout the execution.

//The process of squashing is as follows:
//The process of squashing is as follows: given all entries with certain key k, taken in the same order as they were inserted, 
//verify that the ith entry new_value is equal to the ith + 1 entry previous_value.

//For example, given the following entry list:

//key	previous	new
//Alex	0	150
//Maria	0	100
//Charles	0	70
//Maria	100	250
//Alex	150	40
//Alex	40	300
//Maria	250	190
//Alex	300	90

//After squashing, the entry list would be reduced to:
//Alex	0	90
//Maria	0	190
//Charles	0	70

//In case of a change on any of the values of the first table, squashing would have failed during runtime.

// Objective: Verify the correctness of a proof generated by a Cairo program execution using a Felt252Dict<T>.

// Verification Process: Ensure no illegal tampering occurred with the Felt252Dict<T> during execution, done via squash_dict method.

// Squashing: Review each entry in the Felt252Dict<T> to confirm coherent access throughout execution.

// Process of Squashing:
// - For each key k, taken in insertion order:
//   - Verify that the value (new_value) in the ith entry equals the value (previous_value) in the (i+1)th entry.

// Example:
// Consider the following entry list:
// key    previous   new
// Alex   0          150
// Maria  0          100
// Charles 0         70
// Maria  100        250
// Alex   150        40
// Alex   40         300
// Maria  250        190
// Alex   300        90

// After squashing, the entry list would be reduced to:
// Alex   0          90
// Maria  0          190
// Charles 0         70

// Conclusion:
// If any unauthorized changes occurred in the first table's values, squashing would have detected them during runtime, indicating an integrity failure in the Felt252Dict<T> data structure.
